#! /usr/bin/env bash

mkrepos() {

   mkdir -p "$HOME"/config

   if cd "$HOME"/config; then

      git clone git@github.com:kurkale6ka/bashfiles.git
      git clone git@github.com:kurkale6ka/help.git

      if git clone git@github.com:kurkale6ka/vimfiles.git; then

         if cd vimfiles/bundle; then

            git clone git@github.com:kurkale6ka/vim-blanklines.git
            git clone git@github.com:kurkale6ka/vim-blockinsert.git
            git clone git@github.com:kurkale6ka/vim-quotes.git
            git clone git@github.com:kurkale6ka/vim-sequence.git
            git clone git@github.com:kurkale6ka/vim-swap.git
            git clone git://github.com/godlygeek/csapprox.git
            git clone git://github.com/godlygeek/tabular.git
            git clone git://github.com/tpope/vim-pathogen.git
            git clone git://github.com/tpope/vim-abolish.git
            git clone git://github.com/tpope/vim-endwise.git
            git clone git://github.com/tpope/vim-unimpaired.git
            git clone git://github.com/tpope/vim-surround.git
            git clone git://github.com/tpope/vim-repeat.git
            git clone git://github.com/tpope/vim-ragtag.git
            git clone git://github.com/tpope/vim-flatfoot.git
            git clone git://github.com/scrooloose/nerdcommenter.git
            git clone git://github.com/vim-scripts/MarkLines.git
            git clone git://github.com/vim-scripts/bufkill.vim.git
         fi
      fi
   fi
}

updaterepos() {

   if cd "$HOME"/config/bashfiles
   then git pull git@github.com:kurkale6ka/bashfiles.git master
   fi

   if cd "$HOME"/config/help
   then git pull git@github.com:kurkale6ka/help.git master
   fi

   if cd "$HOME"/config/vimfiles
   then git pull git@github.com:kurkale6ka/vimfiles.git master
   fi

   if cd "$HOME"/config/vimfiles/bundle/vim-blanklines
   then git pull git@github.com:kurkale6ka/vim-blanklines.git master
   fi

   if cd "$HOME"/config/vimfiles/bundle/vim-blockinsert
   then git pull git@github.com:kurkale6ka/vim-blockinsert.git master
   fi

   if cd "$HOME"/config/vimfiles/bundle/vim-quotes
   then git pull git@github.com:kurkale6ka/vim-quotes.git master
   fi

   if cd "$HOME"/config/vimfiles/bundle/vim-sequence
   then git pull git@github.com:kurkale6ka/vim-sequence.git master
   fi

   if cd "$HOME"/config/vimfiles/bundle/vim-swap
   then git pull git@github.com:kurkale6ka/vim-swap.git master
   fi

   if cd "$HOME"/config/vimfiles/bundle/csapprox
   then git pull git://github.com/godlygeek/csapprox.git master
   fi

   if cd "$HOME"/config/vimfiles/bundle/tabular
   then git pull git://github.com/godlygeek/tabular.git master
   fi

   if cd "$HOME"/config/vimfiles/bundle/vim-pathogen
   then git pull git://github.com/tpope/vim-pathogen.git master
   fi

   if cd "$HOME"/config/vimfiles/bundle/vim-abolish
   then git pull git://github.com/tpope/vim-abolish.git master
   fi

   if cd "$HOME"/config/vimfiles/bundle/vim-endwise
   then git pull git://github.com/tpope/vim-endwise.git master
   fi

   if cd "$HOME"/config/vimfiles/bundle/vim-unimpaired
   then git pull git://github.com/tpope/vim-unimpaired.git master
   fi

   if cd "$HOME"/config/vimfiles/bundle/vim-surround
   then git pull git://github.com/tpope/vim-surround.git master
   fi

   if cd "$HOME"/config/vimfiles/bundle/vim-repeat
   then git pull git://github.com/tpope/vim-repeat.git master
   fi

   if cd "$HOME"/config/vimfiles/bundle/vim-ragtag
   then git pull git://github.com/tpope/vim-ragtag.git master
   fi

   if cd "$HOME"/config/vimfiles/bundle/vim-flatfoot
   then git pull git://github.com/tpope/vim-flatfoot.git master
   fi

   if cd "$HOME"/config/vimfiles/bundle/nerdcommenter
   then git pull git://github.com/scrooloose/nerdcommenter.git master
   fi

   if cd "$HOME"/config/vimfiles/bundle/MarkLines
   then git pull git://github.com/vim-scripts/MarkLines.git master
   fi

   if cd "$HOME"/config/vimfiles/bundle/bufkill.vim
   then git pull git://github.com/vim-scripts/bufkill.vim.git master
   fi
}

cprepos() {
   wget --no-check-certificate                               \
      https://github.com/kurkale6ka/bashfiles/tarball/master \
      https://github.com/kurkale6ka/help/tarball/master

   if wget --no-check-certificate \
      https://github.com/kurkale6ka/vimfiles/tarball/master
   then
      wget --no-check-certificate                                     \
         https://github.com/kurkale6ka/vim-blanklines/tarball/master  \
         https://github.com/kurkale6ka/vim-blockinsert/tarball/master \
         https://github.com/kurkale6ka/vim-quotes/tarball/master      \
         https://github.com/kurkale6ka/vim-sequence/tarball/master    \
         https://github.com/kurkale6ka/vim-swap/tarball/master        \
         https://github.com/godlygeek/csapprox/tarball/master         \
         https://github.com/godlygeek/tabular/tarball/master          \
         https://github.com/tpope/vim-pathogen/tarball/master         \
         https://github.com/tpope/vim-abolish/tarball/master          \
         https://github.com/tpope/vim-endwise/tarball/master          \
         https://github.com/tpope/vim-unimpaired/tarball/master       \
         https://github.com/tpope/vim-surround/tarball/master         \
         https://github.com/tpope/vim-repeat/tarball/master           \
         https://github.com/tpope/vim-ragtag/tarball/master           \
         https://github.com/tpope/vim-flatfoot/tarball/master         \
         https://github.com/scrooloose/nerdcommenter/tarball/master   \
         https://github.com/vim-scripts/MarkLines/tarball/master      \
         https://github.com/vim-scripts/bufkill.vim/tarball/master    \
   fi
   local repo
   for repo in master*; do
      # Use tar with -C <dir> ...?
      tar zxvf "$repo" && command rm "$repo"
   done
}

 rcdirs=({bash,vim}files help)
    rcs=(.gitignore .my.cnf .{curl,input,irb,screen,top}rc)
 vimrcs=(.{,g}vimrc)
bashrcs=(.profile .bash_{profile,login,logout} .bashrc{,_after} .logout)

mklinks() {

   local rcdir
   for rcdir in "${rcdirs[@]}"
   do ln -sT "${rcdir/#/$HOME/config/}" "${rcdir/#/$HOME/}"
   done

   ln -sT "$HOME"/config/vimfiles    "$HOME"/.vim
   ln -sT "$HOME"/config/help/.irssi "$HOME"/.irssi

   if ((! $#)); then
      ln -s "$HOME"/config/vimfiles/bundle/vim-pathogen/autoload/pathogen.vim \
            "$HOME"/config/vimfiles/autoload
   fi

   ln -s "${rcs[@]/#/$HOME/config/help/}"      \
      "${vimrcs[@]/#/$HOME/config/vimfiles/}"  \
     "${bashrcs[@]/#/$HOME/config/bashfiles/}" "$HOME"

   mkdir -p "$HOME"/bin
   if [[ -d $HOME/bin ]]; then
      ln -s "$HOME"/config/bashfiles/scripts/mkconfig "$HOME"/bin
      ln -s "$HOME"/config/vimfiles/scripts/vimcat    "$HOME"/bin/vc
   fi
}

rmlinks() {
   command \
      rm "$HOME"/{.vim,config/vimfiles/autoload/pathogen.vim,bin/{mkconfig,vc}} \
                  "${rcdirs[@]/#/$HOME/}"                                       \
                  "${vimrcs[@]/#/$HOME/}"                                       \
                 "${bashrcs[@]/#/$HOME/}"                                       \
                     "${rcs[@]/#/$HOME/}"
   command rm -r "$HOME"/.irssi
}

mkenv() {
   mkrepos
   emerge sudo vixie-cron moreutils
   # rc-update add vixie-cron default
   # rc-update add ntpd default

   mkdir -p "$HOME"/backups
   # crontab -u "$USER" "$HOME"/help/crontab.backups
}

 options=('Update repositories' 'Create repositories' 'Copy repositories')
options+=('Make links'          'Remove links'        'Machine setup')

select choice in "${options[@]}"
do
   case "$choice" in
      "${options[0]}") updaterepos; break;;
      "${options[1]}") mkrepos;     break;;
      "${options[2]}") cprepos;     break;;
      "${options[3]}") mklinks;     break;;
      "${options[4]}") rmlinks;     break;;
      "${options[5]}") mkenv;       break;;
                    *) echo '*** Wrong choice ***' >&2
   esac
done
