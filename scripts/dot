#! /usr/bin/env bash

# Install/update script for all my dot files
#
# Author Dimitar Dimitrov <mitkofr@yahoo.fr>
# ------------------------------------------

# shopt -s extglob

me=kurkale6ka
dotfiles="$HOME/test2"
repos="$HOME/test"
bashfiles="$repos/bashfiles"
helpfiles="$repos/help"
vimfiles="$repos/vimfiles"
bash_dotfiles=("$dotfiles/."{profile,bash_profile,bashrc,bashrc_after,bash_logout,inputrc})
help_dotfiles=("$dotfiles/."{gitignore,screenrc,curlrc})
vim_dotfiles=("$dotfiles/."{vim,vimrc,gvimrc})

# [[ ! -d $HOME/bin ]] && mkdir -p "$HOME/bin"
# ln -s "$bashfiles/scripts/iurl"   "$HOME/bin"
# ln -s "$bashfiles/scripts/utests" "$HOME/bin"
# ln -s "$bashfiles/scripts/dot"    "$HOME/bin"

uncompress() {

    tar -zxvf "$1"/*"$2"*"$3"*.tar.gz -C "$1"
    rm "$1"/*"$2"*"$3"*.tar.gz
    mv "$1"/{*"$2"*"$3"*/,"$3"}
}

getRepo() {

    if [[ $git ]] || command -v git >/dev/null 2>&1; then

        git=true

        #if git clone "git@207.97.227.248:$me/$1.git" "$repos/$1"; then
        if git clone "git@github.com:$me/$1.git" "$repos/$1"; then

            printf "Cloned $1 repository\n"
        else
            if wget -P "$repos" "http://github.com/$me/$1/tarball/master"; then

                uncompress "$repos" "$me" "$1"
            fi
        fi
    else
        if [[ ! $first ]]; then

            printf "Git is not installed on this machine:\n\n"
            choice_git='I want to install git and retry later'
            choice_repos='I want to simply copy the repositories'

            select choice in "$choice_git" "$choice_repos"; do

                if [[ $choice == $choice_git ]]; then

                    abort=true
                    return 1
                fi
                break
            done

            (( first++ ))
        fi

        if [[ ! $abort ]] &&
            wget -P "$repos" "http://github.com/$me/$1/tarball/master"; then

            uncompress "$repos" "$me" "$1"
        fi
    fi
}

link() {

    # Delete if not mine
    if [[ -e $2 && ! -O $2 ]]; then

        [[ -d $2 ]] && rm -r "$2" || rm "$2"
    fi

    # Delete if mine but not a link
    if [[ -e $2 && ! -L $2 ]]; then

        [[ -d $2 ]] && rm -r "$2" || rm "$2"
    fi

    # To be improved
    [[ ! -L $2 ]] && ln -s "$1/${2##*/}" "$3"
}

linkToRepo() {

    if [[ ! -d $1 ]]; then

        if [[ ! $abort ]] && getRepo "${1##*/}"; then

            for df in "${2[@]}"; do

                link "$1" "$df" "$3"
            done
        fi
    fi
}

linkToRepo "$bashfiles" "$bash_dotfiles" "$dotfiles"
linkToRepo "$helpfiles" "$help_dotfiles" "$dotfiles"
linkToRepo "$vimfiles"  "$vim_dotfiles"  "$dotfiles"

## All plugins: ln or cp if -win
#for p in "$vimfiles/plugins"; do

#done
